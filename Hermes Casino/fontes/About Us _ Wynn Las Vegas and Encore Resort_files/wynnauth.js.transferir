(function ($) {
    $.wynnAuth = function (options) {
        var settings = $.extend({
            apiEndPointUri: '/connect/authorize',
            clientSku: 'ID_AUTO_JS',
            clientVer: '1.0',
            prompt: 'none',
            onAuthComplete: function () { }
        }, options);

        var plugin = this;

        plugin.init = function () {
            silentLogin();
        };

        // public methods
        var silentLogin = function () {
            var authorizeUrl = generateAuthorizeUrl();

            $('<iframe id="silentAuthFrame" src="' + authorizeUrl + '" frameborder="0" width="0" height="0" style="display:none;">').appendTo('body');
            $('#silentAuthFrame').on('load', function () {
                var doc = document.getElementById("silentAuthFrame").contentWindow;
                msg = "auth_user_not_found";
                var hashParams = doc.location.hash.split('&');
                for (var i = 0; i < hashParams.length; i++) {
                    if (hashParams[i].indexOf("id_token") > -1) {
                        msg = "auth_user_found";
                        break;
                    }
                }
                authCompleteCallback(msg);
            });
        };

        // private methods
        var generateAuthorizeUrl = function () {
            var url = settings.auth_url + settings.apiEndPointUri +
                "?client_id=" + settings.client_id +
                "&redirect_uri=" + encodeURIComponent(settings.redirect_uri) +
                "&response_type=" + settings.response_type +
                "&scope=" + settings.scope +
                "&nonce=" + generateNonce() +
                "&x-client-SKU=" + settings.clientSku +
                "&x-client-ver=" + settings.clientVer +
                "&prompt=none";
            return url;
        };

        //nonce for authorize
        var generateNonce = function () {
            var text = "";
            var possible = "0123456789ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz-._~";
            for (var i = 0; i < 50; i++) {
                text += possible.charAt(Math.floor(Math.random() * possible.length));
            }
            return text;
        };

        //callback
        var authCompleteCallback = function (data) {
            var callback = settings.onAuthComplete;
            if ($.isFunction(callback)) {
                callback.call(this, data);
            }
        };

        plugin.init();
    };

    $.fn.pluginName = function (options) {
        return this.each(function () {
            if (undefined === $(this).data('wynnAuth')) {
                var plugin = new $.pluginName(this, options);
                $(this).data('wynnAuth', plugin);
            }
        });
    };
})(jQuery);

